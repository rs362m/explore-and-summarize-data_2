xlab('Borrowers Employment Status(EmploymentStatus)') +
ggtitle("Current Delinquencies by Borrower's Employment Status\n")
ggplot(aes(x = Year, y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_boxplot(aes(fill = Year)) +
scale_y_log10() +
scale_fill_brewer(palette='OrRd') +
ylab('CurrentDelinquencies') +
xlab('Year') +
ggtitle('CurrentDelinquencies by Year\n')
ggplot(aes(x = Year, y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_boxplot(aes(fill = Year)) +
scale_y_continuous(breaks = seq(5, 50, 5),limits=c(5,50)) +
scale_fill_brewer(palette='OrRd') +
ylab('CurrentDelinquencies') +
xlab('Year') +
ggtitle('CurrentDelinquencies by Year\n')
by(dfTemp2$CurrentDelinquencies,dfTemp2$Year,sum)
ggplot(aes(x = factor(CreditScoreRangeUpper), y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_boxplot(aes(fill = CreditScoreRangeUpper),width=1.0) +
theme_bw() +
scale_y_continuous(breaks=seq(0,85,5),limits=c(0,85)) +
theme(axis.text.x = element_text(angle = 90)) +
ylab('CurrentDelinquencies') +
xlab('CreditScoreRangeUpper') +
ggtitle('CurrentDelinquencies by CreditScoreRangeUpper\n')
ggplot(aes(x = factor(CreditScoreRangeUpper), y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_boxplot(aes(fill = CreditScoreRangeUpper),width=1.0) +
theme_bw() +
scale_y_continuous(breaks = seq(5, 50, 5),limits=c(5,50)) +
theme(axis.text.x = element_text(angle = 90)) +
ylab('CurrentDelinquencies') +
xlab('CreditScoreRangeUpper') +
ggtitle('CurrentDelinquencies by CreditScoreRangeUpper\n')
ggplot(aes(x = factor(CreditScoreRangeUpper), y = CurrentDelinquencies),
data = dfTemp2) +
geom_boxplot(aes(fill = CreditScoreRangeUpper),width=1.0) +
theme_bw() +
scale_y_continuous(breaks = seq(5, 50, 5),limits=c(5,50)) +
theme(axis.text.x = element_text(angle = 90)) +
ylab('CurrentDelinquencies') +
xlab('CreditScoreRangeUpper') +
ggtitle('CurrentDelinquencies by CreditScoreRangeUpper\n')
by(dfTemp2$CurrentDelinquencies,dfTemp2$CreditScoreRangeUpper,summary)
by(dfTemp2$CurrentDelinquencies,dfTemp2$CreditScoreRangeUpper,sum)
ggplot(aes(x = IsBorrowerHomeowner,
y = LoanOriginalAmount,
fill=IsBorrowerHomeowner ),
data = LoanData) +
geom_boxplot() +
scale_y_continuous(limits = c(0,35000),
breaks = seq(0,35000,5000),
labels=dollar) +
ylab('Original Loan Amount (LoanOriginalAmount)') +
xlab('Is Borrower Homeowner') +
ggtitle("LoanAmount by IsBorrowerHomeowner\n")
by(LoanData$LoanOriginalAmount,
LoanData$IsBorrowerHomeowner,
summary)
ggplot(aes(x = IsBorrowerHomeowner,
y = LoanOriginalAmount,
fill=IsBorrowerHomeowner ),
data = LoanData) +
geom_boxplot() +
scale_y_continuous(limits = c(0,20000),
breaks = seq(0,20000,5000),
labels=dollar) +
ylab('Original Loan Amount (LoanOriginalAmount)') +
xlab('Is Borrower Homeowner') +
ggtitle("LoanAmount by IsBorrowerHomeowner\n")
ggplot(LoanData, aes(x = Term)) +
geom_histogram(binwidth = 10, fill = '#099DD9',
position='identity') +
scale_x_continuous(breaks = seq(0,72, 12),limits = c(0,72)) +
scale_y_log10() +
xlab('Loan Term') +
ylab('Number of Loans (log10)') +
ggtitle('Loan Terms\n')
ggplot(LoanData, aes(x = Term)) +
geom_histogram(binwidth = 100, fill = '#099DD9',
position='identity') +
scale_x_continuous(breaks = seq(0,72, 12),limits = c(0,72)) +
scale_y_log10() +
xlab('Loan Term') +
ylab('Number of Loans (log10)') +
ggtitle('Loan Terms\n')
ggplot(LoanData, aes(x = Term)) +
geom_histogram(binwidth = 50, fill = '#099DD9',
position='identity') +
scale_x_continuous(breaks = seq(0,72, 12),limits = c(0,72)) +
scale_y_log10() +
xlab('Loan Term') +
ylab('Number of Loans (log10)') +
ggtitle('Loan Terms\n')
ggplot(LoanData, aes(x = Term)) +
geom_histogram(binwidth = 5, fill = '#099DD9',
position='identity') +
scale_x_continuous(breaks = seq(0,72, 12),limits = c(0,72)) +
scale_y_log10() +
xlab('Loan Term') +
ylab('Number of Loans (log10)') +
ggtitle('Loan Terms\n')
ggplot(LoanData, aes(x = Term)) +
geom_histogram(binwidth = 5,fill = '#099DD9') +
scale_x_discrete(limits = c(0,12,36,60)) +
scale_y_log10() +
xlab('Loan Term') +
ylab('Number of Loans (log10)') +
ggtitle('Loan Terms\n')
ggplot(LoanData, aes(x = Term)) +
geom_histogram(binwidth = 15,fill = '#099DD9') +
scale_x_discrete(limits = c(0,12,36,60)) +
scale_y_log10() +
xlab('Loan Term') +
ylab('Number of Loans (log10)') +
ggtitle('Loan Terms\n')
ggplot(LoanData, aes(x = Term)) +
geom_histogram(binwidth = 15,fill = '#099DD9') +
scale_x_discrete(limits = c(0,12,36,60,72)) +
scale_y_log10() +
xlab('Loan Term') +
ylab('Number of Loans (log10)') +
ggtitle('Loan Terms\n')
ggplot(LoanData, aes(x = Term)) +
geom_histogram(binwidth = 5, fill = '#099DD9',
position='identity',drop=TRUE) +
scale_x_continuous(breaks = seq(0,72, 12),limits = c(0,72)) +
scale_y_log10() +
xlab('Loan Term') +
ylab('Number of Loans (log10)') +
ggtitle('Loan Terms\n')
ggplot(LoanData, aes(x = LoanStatus)) +
geom_histogram(binwidth = 100, fill = '#099DD9') +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 90)) +
xlab('Loan Status') +
ylab('Number of Loans (log10)') +
ggtitle('Status of the Loans Borrowed\n')
ggplot(subset(LoanData,
LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies)),
aes(x = CurrentDelinquencies)) +
geom_freqpoly(binwidth = 1) +
scale_x_continuous(breaks = seq(1, 83, 3)) +
scale_y_log10() +
xlab('Current Deliquencies') +
ylab('Number of Loans(log10)') +
ggtitle('Borrowers Deliquencies\n')
ggplot(subset(LoanData,
LoanData$LP_NetPrincipalLoss < 0),
aes(x = LP_NetPrincipalLoss)) +
geom_histogram(binwidth = 100,color = 'black',
fill = 'orange',position = "identity") +
scale_x_continuous(breaks=seq(-1000,0,100),
limits=c(-1000,0), labels = dollar) +
scale_y_log10() +
xlab('Net Principal Gain (LP_NetPrincipalLoss < 0)') +
ylab('Number of Loans with Principal Gain (count)') +
ggtitle('Gain of princial Amount on the Loans Issued\n')
ggplot(subset(LoanData,
LoanData$LP_NetPrincipalLoss < 0),
aes(x = LP_NetPrincipalLoss)) +
geom_histogram(binwidth = 100,color = 'black',fill = 'orange') +
scale_x_continuous(labels = dollar) +
xlab('Net Principal Gain (LP_NetPrincipalLoss < 0)') +
ylab('Number of Loans with Principal Gain (count)') +
ggtitle('Gain of princial Amount on the Loans Issued\n')
ggplot(subset(LoanData,
LoanData$LP_NetPrincipalLoss < 0),
aes(x = LP_NetPrincipalLoss)) +
geom_histogram(binwidth = 100,color = 'black',
fill = 'orange',position = "identity") +
scale_x_continuous(breaks=seq(-1000,0,100),
limits=c(-1000,0), labels = dollar) +
scale_y_log10() +
xlab('Net Principal Gain (LP_NetPrincipalLoss < 0)') +
ylab('Number of Loans with Principal Gain (count)') +
ggtitle('Gain of princial Amount on the Loans Issued\n')
ggplot(subset(LoanData,
LoanData$LP_NetPrincipalLoss < 0),
aes(x = LP_NetPrincipalLoss)) +
geom_histogram(binwidth = 100,color = 'black',
fill = 'orange',position = "identity",
drop="TRUE") +
scale_x_continuous(breaks=seq(-1000,0,100),
limits=c(-1000,0), labels = dollar) +
scale_y_log10() +
xlab('Net Principal Gain (LP_NetPrincipalLoss < 0)') +
ylab('Number of Loans with Principal Gain (count)') +
ggtitle('Gain of princial Amount on the Loans Issued\n')
ggplot(subset(LoanData,
LoanData$LP_NetPrincipalLoss < 0),
aes(x = LP_NetPrincipalLoss)) +
geom_histogram(binwidth = 100,color = 'black',
fill = 'orange',position = "identity") +
scale_x_continuous(breaks=seq(-1000,0,100),
limits=c(-1000,0), labels = dollar) +
scale_y_log10() +
xlab('Net Principal Gain (LP_NetPrincipalLoss < 0)') +
ylab('Number of Loans with Principal Gain (count)') +
ggtitle('Gain of princial Amount on the Loans Issued\n')
ggplot(aes(x = LoanOriginalAmount), data = LoanData) +
geom_histogram(binwidth = 500, color = 'black', fill = '#099DD9') +
scale_x_continuous(breaks = seq(0, 35000, 5000), labels = dollar) +
coord_cartesian(c(0,35000)) +
scale_y_log10() +
facet_grid(EmploymentStatus~.,scales = "free_y") +
theme(strip.text.y = element_text(size=8, face="bold")) +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts by EmploymentStatus\n')
ggplot(aes(x = LoanOriginalAmount), data = LoanData) +
geom_histogram(binwidth = 500, color = 'black',
fill = '#099DD9',drop="TRUE") +
scale_x_continuous(breaks = seq(0, 35000, 5000), labels = dollar) +
coord_cartesian(c(0,35000)) +
scale_y_log10() +
facet_grid(EmploymentStatus~.,scales = "free_y") +
theme(strip.text.y = element_text(size=8, face="bold")) +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts by EmploymentStatus\n')
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
suppressMessages(library(gridExtra))
suppressMessages(library(alr3))
suppressMessages(library(reshape2))
suppressMessages(library(scales))
suppressMessages(library(GGally))
suppressMessages(library(memisc))
suppressMessages(library(RColorBrewer))
suppressMessages(library(plyr))
setwd('C:/nanodegree/DA/EDA/P3Project')
LoanDataAll <- read.csv('prosperLoanData.csv',
header = TRUE,
check.names = FALSE)
LoanData <- LoanDataAll %>%
dplyr::select(Term,LoanStatus,BorrowerRate,BorrowerState,Occupation,
EmploymentStatus,IsBorrowerHomeowner,CreditScoreRangeLower,
CreditScoreRangeUpper,CurrentDelinquencies,AmountDelinquent,
IncomeRange,LoanCurrentDaysDelinquent,LoanOriginalAmount,
LoanOriginationQuarter,MonthlyLoanPayment,
LP_CustomerPayments,LP_CustomerPrincipalPayments,
LP_InterestandFees,LP_NetPrincipalLoss)
LoanData$Year <- sub("[[:alnum:]][[:digit:]] ",
"",
LoanData$LoanOriginationQuarter)
dfTemp <- subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))
# Data with deliquencies between 1-5
dfTemp1 <- subset(LoanData,LoanData$CurrentDelinquencies > 0
& LoanData$CurrentDelinquencies < 5 &
!is.na(CurrentDelinquencies))
# Data with deliquencies between 5-50
dfTemp2 <- subset(LoanData,LoanData$CurrentDelinquencies > 4
& LoanData$CurrentDelinquencies < 51 &
!is.na(CurrentDelinquencies))
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies)) +
geom_boxplot(aes(fill=IncomeRange),stat = "boxplot", position = "dodge") +
scale_y_continuous(breaks = seq(5,50,5),limits = c(5,50)) +
scale_x_continuous(breaks = seq(500,800,50),limits=c(500,800)) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
scale_fill_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies)) +
geom_boxplot(aes(fill=IncomeRange),stat = "boxplot", position = "dodge") +
scale_y_continuous(breaks = seq(5,50,5),limits = c(5,50)) +
scale_x_continuous(breaks = seq(500,800,50),limits=c(500,800)) +
theme(axis.text.x = element_text(angle = 90)) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
scale_fill_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
group = round_any(CreditScoreRangeUpper, 10))) +
geom_boxplot(aes(fill=IncomeRange),stat = "boxplot", position = "dodge") +
scale_y_continuous(breaks = seq(5,50,5),limits = c(5,50)) +
scale_x_continuous(breaks = seq(500,800,50),limits=c(500,800)) +
theme(axis.text.x = element_text(angle = 90)) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
scale_fill_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
group = round_any(CreditScoreRangeUpper, 10))) +
geom_boxplot(aes(fill=IncomeRange)) +
scale_y_continuous(breaks = seq(5,50,5),limits = c(5,50)) +
scale_x_continuous(breaks = seq(500,800,50),limits=c(500,800)) +
theme(axis.text.x = element_text(angle = 90)) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
scale_fill_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
group = round_any(CreditScoreRangeUpper, 10))) +
geom_boxplot(aes(fill=IncomeRange)) +
scale_y_continuous(breaks = seq(5,50,5),limits = c(5,50)) +
scale_x_continuous(breaks = seq(500,800,50),limits=c(500,800)) +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
group = round_any(CreditScoreRangeUpper, 10))) +
geom_boxplot(aes(fill=IncomeRange)) +
scale_y_continuous(breaks = seq(5,50,5),limits = c(5,50)) +
scale_x_continuous(breaks = seq(500,800,50),limits=c(500,800)) +
facet_wrap(~ EmploymentStatus) +
theme(axis.text.x = element_text(angle = 90)) +
scale_fill_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(alpha=1/4) +
scale_y_continuous(breaks = seq(5,50,5),limits = c(5,50)) +
scale_x_continuous(breaks = seq(400,800,100),limits=c(400,800)) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
scale_color_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(alpha=1/5) +
scale_y_continuous(breaks = seq(5,50,5),limits = c(5,50)) +
scale_x_continuous(breaks = seq(400,800,100),limits=c(400,800)) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
scale_color_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
fp2 <- ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(alpha=1/5) +
scale_y_continuous(breaks = seq(5,50,5),limits = c(5,50)) +
scale_x_continuous(breaks = seq(400,800,100),limits=c(400,800)) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
scale_color_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
suppressWarnings(print(fp2))
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
suppressMessages(library(gridExtra))
suppressMessages(library(alr3))
suppressMessages(library(reshape2))
suppressMessages(library(scales))
suppressMessages(library(GGally))
suppressMessages(library(memisc))
suppressMessages(library(RColorBrewer))
suppressMessages(library(plyr))
setwd('C:/nanodegree/DA/EDA/P3Project')
LoanDataAll <- read.csv('prosperLoanData.csv',
header = TRUE,
check.names = FALSE)
LoanData <- LoanDataAll %>%
dplyr::select(Term,LoanStatus,BorrowerRate,BorrowerState,Occupation,
EmploymentStatus,IsBorrowerHomeowner,CreditScoreRangeLower,
CreditScoreRangeUpper,CurrentDelinquencies,AmountDelinquent,
IncomeRange,LoanCurrentDaysDelinquent,LoanOriginalAmount,
LoanOriginationQuarter,MonthlyLoanPayment,
LP_CustomerPayments,LP_CustomerPrincipalPayments,
LP_InterestandFees,LP_NetPrincipalLoss)
LoanData$Year <- sub("[[:alnum:]][[:digit:]] ",
"",
LoanData$LoanOriginationQuarter)
dfTemp <- subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))
# Data with deliquencies between 1-5
dfTemp1 <- subset(LoanData,LoanData$CurrentDelinquencies > 0
& LoanData$CurrentDelinquencies < 5 &
!is.na(CurrentDelinquencies))
# Data with deliquencies between 5-50
dfTemp2 <- subset(LoanData,LoanData$CurrentDelinquencies > 4
& LoanData$CurrentDelinquencies < 51 &
!is.na(CurrentDelinquencies))
ggplot(aes(x = CurrentDelinquencies,
y = LoanOriginalAmount,
color = IncomeRange),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_jitter(alpha=1/5) +
scale_y_log10() +
scale_x_continuous(breaks = seq(0,40,5),limits = c(0,40)) +
scale_color_brewer(palette="BuGn") +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
theme_minimal() +
facet_wrap(~ IncomeRange) +
xlab('CurrentDelinquencies') +
ylab('LoanOriginalAmount') +
ggtitle('CurrentDelinquencies vs LoanOriginalAmount \n by IncomeRange\n')
setwd('C:/nanodegree/DA/EDA/P3Project')
LoanDataAll <- read.csv('prosperLoanData.csv',
header = TRUE,
check.names = FALSE)
LoanData <- LoanDataAll %>%
dplyr::select(Term,LoanStatus,BorrowerRate,BorrowerState,Occupation,
EmploymentStatus,IsBorrowerHomeowner,CreditScoreRangeLower,
CreditScoreRangeUpper,CurrentDelinquencies,AmountDelinquent,
IncomeRange,LoanCurrentDaysDelinquent,LoanOriginalAmount,
LoanOriginationQuarter,MonthlyLoanPayment,
LP_CustomerPayments,LP_CustomerPrincipalPayments,
LP_InterestandFees,LP_NetPrincipalLoss)
LoanData$Year <- sub("[[:alnum:]][[:digit:]] ",
"",
LoanData$LoanOriginationQuarter)
dfTemp <- subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))
# Data with deliquencies between 1-5
dfTemp1 <- subset(LoanData,LoanData$CurrentDelinquencies > 0
& LoanData$CurrentDelinquencies < 5 &
!is.na(CurrentDelinquencies))
# Data with deliquencies between 5-50
dfTemp2 <- subset(LoanData,LoanData$CurrentDelinquencies > 4
& LoanData$CurrentDelinquencies < 51 &
!is.na(CurrentDelinquencies))
ggplot(aes(x = CurrentDelinquencies,
y = LoanOriginalAmount,
color = IncomeRange),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_jitter(alpha=1/5) +
scale_y_log10() +
scale_x_continuous(breaks = seq(0,40,5),limits = c(0,40)) +
scale_color_brewer(palette="BuGn") +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
theme_minimal() +
facet_wrap(~ IncomeRange) +
xlab('CurrentDelinquencies') +
ylab('LoanOriginalAmount') +
ggtitle('CurrentDelinquencies vs LoanOriginalAmount \n by IncomeRange\n')
ggplot(aes(x = CurrentDelinquencies,
y = LoanOriginalAmount,
color = IncomeRange),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_jitter(alpha=1/5) +
scale_y_log10() +
scale_x_continuous(breaks = seq(5,40,5),limits = c(5,40)) +
scale_color_brewer(palette="BuGn") +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
theme_minimal() +
facet_wrap(~ IncomeRange) +
xlab('CurrentDelinquencies') +
ylab('LoanOriginalAmount') +
ggtitle('CurrentDelinquencies vs LoanOriginalAmount \n by IncomeRange\n')
ggplot(aes(x = CurrentDelinquencies,
y = LoanOriginalAmount,
color = IncomeRange),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_jitter(alpha=1/5) +
scale_y_log10() +
scale_x_continuous(breaks = seq(0,40,5),limits = c(0,40)) +
scale_color_brewer(palette="BuGn") +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
theme_minimal() +
facet_wrap(~ IncomeRange) +
xlab('CurrentDelinquencies') +
ylab('LoanOriginalAmount') +
ggtitle('CurrentDelinquencies vs LoanOriginalAmount \n by IncomeRange\n')
